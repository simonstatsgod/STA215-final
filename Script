## Project:  STA 215, Fall 2024, Final Project
# Located:   R Studio
# File Name: Song
# Date:      2024_11_25
# Who:       Simon Colon

## Load packages
# NOTE: Run base.R if these commands return an error!
library(readr)
library(dplyr)
library(tidytext)
library(tidyverse)
library(ggplot2)
library(haven)
library(forcats)
library(psych)

# Load data 
library(readr)
raw_data <- read_csv("raw_data.csv")
View(raw_data)

##################################################################################
############### Table 1: descriptive statistics    ####################   
##################################################################################
table(raw_data$song_length)
mean(raw_data$song_length)
sd(raw_data$song_length)

table(raw_data$streams)
mean(raw_data$streams)
sd(raw_data$streams)

table(raw_data$song_descriptor)

table(raw_data$song_topic)

table(raw_data$personal_enjoyment)
mean(raw_data$personal_enjoyment)
sd(raw_data$personal_enjoyment)

table(raw_data$album)

##################################################################################
#################### Figure 1: boxplot             ####################   
##################################################################################
lm(song_length ~ key, data = raw_data)
aov(song_length ~ key, data = raw_data)
summary(song_length ~ key, data = raw_data)
boxplot(song_length ~ key, data = raw_data)

lm(song_length ~ key, data = raw_data)
aov(song_length ~ key, data = raw_data)
summary(song_length ~ key, data = raw_data)
boxplot(song_length ~ key, data = raw_data)
boxplot(song_length ~ key, data = raw_data, 
        xlab = "Key Signature", 
        ylab = "Song Length (seconds)", 
        main = "Figure 1: Song Length vs Key Signature")

##################################################################################
####################   Figure 2: scatter plot             ####################   
##################################################################################
# Create a scatter plot with clean labels

# Log-transform the 'streams' variable
raw_data$lnstreams <- log(raw_data$streams)

# Create the scatter plot with the log-transformed 'streams'
plot(
  raw_data$song_length, 
  raw_data$lnstreams,  # Use log-transformed 'streams' for the Y-axis
  xlab = "Song Length",  # Clean X-axis label
  ylab = "Log of Streams",  # Update Y-axis label to reflect log transformation
  main = "Figure 2: Song Length and Streams",  # Update plot title
  pch = 16,  # Use a filled circle for points
  col = "blue"  # Points color
)

# Add mean lines for the new Y-axis (log-transformed streams)
meany <- mean(raw_data$song_length)
meanx <- mean(raw_data$lnstreams)  # Use log-transformed 'streams' for the mean
abline(h = meanx, col = "black", lty = 2)  # Horizontal mean line
abline(v = meany, col = "black", lty = 2)  # Vertical mean line

# Fit a linear model using the log-transformed 'streams'
linear_relationship <- lm(lnstreams ~ song_length, data = raw_data)  # Use log-transformed 'streams'
summary(linear_relationship)

# Add the regression line to the plot for log-transformed 'streams'
abline(linear_relationship, col = "red", lwd = 2)  # Regression line in red

##################################################################################
####################  Figure 3: Residual Plot                 ####################   
##################################################################################
# Fit the linear regression model (from Figure 2)
linear_relationship <- lm(streams ~ song_length, data = raw_data)

# Extract residuals from the model
residuals <- resid(linear_relationship)

# Create the residual plot
plot(
  raw_data$song_length,  # X-axis: predictor (independent variable)
  residuals,             # Y-axis: residuals (errors from regression)
  xlab = "Song Length",  # Label for the X-axis
  ylab = "Residuals",    # Label for the Y-axis
  main = "Figure 3: Residual Plot",  # Title for the plot
  pch = 16,              # Use filled circles for points
  col = "darkgreen"      # Color of the points
)

# Add a horizontal line at the mean of the residuals (which should ideally be zero)
abline(h = mean(residuals), col = "red", lty = 2, lwd = 2)  # Red dashed line
